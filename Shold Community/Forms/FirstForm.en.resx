<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>To All Players!

Before you use the program, please copy all of your game files to a different place(backup your data)!!!

This program will produce an incredible number of errors, it is asked to treat them with condescension.
This is a pre-alpha version. Use the course of action for this program, as written below, to get the expected result. Not all the errors will be gone, I know, it's still alpha.
The program is in the process of development,  it is now being tested and refined backend.


|||I can not translate this. I need more explanation|||
Клиентская часть (то, что вы видите) будет в дальнейшем переписываться с нуля + Andriod. В клиентской части реализовано пока что очень мало из задуманного: сохранение и обмен шаблонами построений и запросы на ресурсы. Это все видно только вашим друзьям.
Цель задумки - снять ограничение в 40 человек (в игре в почтовом чате может быть не более 43-х человек) для быстрой координации игроков-союзников.
У вас у каждого есть по одному инвайту (приглашению) (у первых тестеров больше) нового пользователя. Таким образом вы можете подтянуть по цепочке всю свою команду (фракцию,  Дом, других союзников).
|||I can not translate this. I need more explanation|||



The steps to set up the program.
1. To authorize do the following:
Press down on the Panel -&gt; "Settings" -&gt; "Authentication(sign in)"
Next you will see a small window "Authorization Options"
Enter the data provided by the Administrator (or your data if you were invited).
A login window will appear.



Getting started with the program:
2. To add or remove friends go to the tab "Settings" -&gt; "Friends"
2.1 At the moment, the addition and deletion occurs without asking another player. In the future, naturally, it will be different. + You will be able to group allies.

3.Robot with villages.
3.1 "Settings" -&gt; "Manage villages" adding at least one village. It is desirable to add an existing id of your village (to the Allies really know where to send resources).
3.2 "Settings" -&gt; "Capacity of warehouses" - fill its max. capacity

Now you can go to the "Resources" tab
4.1 Resources.
In this section you can keep track of requests for any kind of resource from you or friends.
4.2 Request for resources - requires at least one village. Choose a village where resources are needed. Select the type and name of the requested resource. Enter the desired number of the resource (capacity is full automatic, if you personalize 3.2) Click on the "Search"

4. Templates.
This is the base on which tab you move automatically.
4.1 Drop-down menu (on the left of "Friends formations") allows you to select the type of constructions.
If you choose any you will see your added templates of added your friends. When choosing a template and press the button "Copy to the game" is the template is in a folder with the game and you can them directly use to attack.
Flag 4.2 (tick) "Friends formations" - displays or hides the templates of other players (your allies)

5. Feedback:
5.1 FaceBook group: https://vk.com/shkcommunity
5.2 E-mail: shold.community@yandex.ru (shold-community@yandex.ru)
5.3. The game in the world Wolf (AI world) - Tiger_Greyhawk

</value>
  </data>
</root>